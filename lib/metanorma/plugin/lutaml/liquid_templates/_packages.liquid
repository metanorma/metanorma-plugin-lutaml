= preface
{{ additional_context.before }}


{% for package in context.packages %}
{% assign before_package_key = 'before;' | append: package.name %}
{% if additional_context[before_package_key] %}
{{ additional_context[before_package_key] }}
{% endif %}

{% assign package_name = package.name | downcase | replace: ":", "" | replace: " ", "_" %}
{% capture equalsigns %}{% for count in (1..depth) %}={% endfor %}{% endcapture %}{{equalsigns}} {{ package.name }}
[[rc_{{ package_name }}-model_section]]
{{equalsigns}}= {{ package.name }}

{% capture requirement_filename %}requirements/requirements_class_{{ package_name }}{% endcapture %}
{% capture requirement_content %}{% include requirement_filename %}{% endcapture %}
{% unless requirement_content contains "Liquid error" %}
{{ requirement_content }}
{% endunless %}

{% capture boundaries_filename %}boundaries/boundaries_{{ package_name }}{% endcapture %}
{% capture boundaries_content %}{% include boundaries_filename %}{% endcapture %}
{% unless boundaries_content contains "Liquid error" %}
<<{{ package_name }}-boundaries-table>> lists the surfaces that are allowed as thematic surface boundaries of the space classes defined in the {{ package.name }} module:

{{ boundaries_content }}
{% endunless %}

{% capture requirement_classes_filename %}requirements/{{ package_name }}/REQ_{{ package_name }}_Classes{% endcapture %}
{% capture requirement_classes_content %}{% include requirement_classes_filename %}{% endcapture %}
{% capture requirement_boundaries_filename %}requirements/{{ package_name }}/REQ_{{ package_name }}_Boundaries{% endcapture %}
{% capture requirement_boundaries_content %}{% include requirement_boundaries_filename %}{% endcapture %}
{% capture requirement_ade_use_filename %}requirements/{{ package_name }}/REQ_{{ package_name }}_ADE_Use{% endcapture %}
{% capture requirement_ade_use_content %}{% include requirement_ade_use_filename %}{% endcapture %}
{% unless requirement_classes_filename contains "Liquid error" and requirement_boundaries_content contains "Liquid error" and requirement_ade_use_content contains "Liquid error" %}
{{equalsigns}}= Requirements

{% unless requirement_classes_content contains "Liquid error" %}
The following requirement defines the rules governing implementation:

{{ requirement_classes_content }}
{% endunless %}
{% unless requirement_boundaries_content contains "Liquid error" %}
The implementation of this Module is further constrained by the
following spatial boundary requirement:

{{ requirement_boundaries_content }}
{% endunless %}
{% unless requirement_ade_use_content contains "Liquid error" %}
The use of extension capabilities by Bridge elements is constrained
by the following requirement:

{{ requirement_ade_use_content }}
{% endunless %}
{% endunless %}

{{equalsigns}}= Class Definitions
{% if package.classes.size > 0 %}
.Classes used in {{ package.name }}
[cols="2a,6a",options="header"]
|===
|Class |Description

{% for klass in package.classes %}
|<<{{ klass.name }}-section,{{ klass.name }}>>
«{{ klass.stereotype }}»
|{{ klass.definition }}

{% endfor %}
|===
{% endif %}

{% if package.data_types.size > 0 %}
.Data Types used in {{ package.name }}
[cols="2,6",options="header"]
|===
|Name |Description

{% for klass in package.data_types %}
|<<{{ klass.name }}-section,{{ klass.name }}>>
|{{ klass.definition }}

{% endfor %}

|===
{% endif %}

{% if package.enums.size > 0 %}
.Enumerated Classes used in {{ package.name }}
[cols="2a,6a",options="header"]
|===
|Name |Description

{% for klass in package.enums %}
|<<{{ klass.name }}-section,{{ klass.name }}>>
|{{ klass.definition }}

{% endfor %}

|===
{% endif %}

{% assign after_package_key = 'after;' | append: package.name %}
{{equalsigns}}= Additional Information
{% if additional_context[after_package_key] %}
{{ additional_context[after_package_key] }}
{% endif %}

{% endfor %}

= footer
{{ additional_context.after }}