{% for complex_type in schema.complex_type %}

[#complex_type_{{complex_type.name}}]

=== Complex Type: *{{ complex_type.name }}*

==== Used By {{ schema | used_by: complex_type | join: ", " }}

Description pass:[{{ complex_type.annotation.documentation.first.content }}]

{% assign complex_type_element_order = complex_type | resolved_element_order: %}
{% assign complex_type_attributes = schema | attributes: complex_type -%}
{% assign elements = schema | child_elements: complex_type %}
.XML Instance Representation 
[source, xml]
-----
<...{{ complex_type_attributes | xml_representations: schema }}
{%- if elements.size > 0 -%}>
{%- for child in elements -%}
{% assign element_name = child.ref || child.name %}
{%- if element_name %}
  <{{ element_name }}> ... </{{ element_name }}> {{ child | cardinality_representation: }}
{%- else %}
  {{ child }}
{%- endif %}
{%- endfor %}
</...>
{%- else -%}
/>
{% endif %}
-----

.Schema Component Representation 
[source, xml]
-----
{{ complex_type | to_xml_representation: skip_rendering_of }}
-----

---

{% endfor %}
