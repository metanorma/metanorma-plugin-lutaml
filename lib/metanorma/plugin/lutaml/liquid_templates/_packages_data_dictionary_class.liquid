{% capture equalsigns %}{% for count in (1..depth) %}={% endfor %}{% endcapture %}
{% capture generalizations %}{% assign inheritance = klass.associations | where: "member_end_type", "inheritance" %}{% for assoc in inheritance %}{% if additional_context.external_classes[assoc.member_end] %}<<{{ additional_context.external_classes[assoc.member_end] }},{{ assoc.member_end }}>>{% else %}<<section-{{ assoc.member_end_xmi_id }},{{ assoc.member_end }}>>{% endif %}{% endfor %}{% endcapture %}
[[section-{{ klass.xmi_id }}]]
{{equalsigns}} {{ klass.name }}
{%comment%}(inside class: depth is {{ depth }}, equalsigns {{equalsigns}}){%endcomment%}

.{{ klass.name }} {% if klass.stereotype %}(«{{klass.stereotype}}»){% endif %}的元数据
[cols="1a,4a"]
|===
h| 定义:
|
{% if klass.definition %}
{{ klass.definition | replace: '|', '\|' | html2adoc }}
{% endif %}

h| 是谁的子类:
|
{% if generalizations.size > 0 %}{{ generalizations }}{% else %}None{% endif %}

h| 构造型:
|
{% if klass.stereotype %}
«{{ klass.stereotype }}»
{% else %}
None
{% endif %}

{% if klass.constraints.size > 0 %}
{% for constraint in klass.constraints %}
h| Constraint:
| `{{ constraint.body }}`:

[source,ocl,%unnumbered]
------
{{ constraint.definition | replace: '|', '\|' }}
------
{% endfor %}
{% endif %}

|===

{% if klass.associations.size > 0 %}
{% capture rendered_associations %}
{% for assoc in klass.associations %}
{% if assoc.member_end_attribute_name.size > 0 %}
{% capture cardinality %}&#91;{% case assoc.member_end_cardinality.min %}{% when "C" %}0{% when "M" %}1{% else %}{{assoc.member_end_cardinality.min}}{% endcase %}..{{ assoc.member_end_cardinality.max }}&#93;{% endcapture %}
| {{ assoc.member_end_attribute_name }}
{% if additional_context.external_classes[assoc.member_end] %}| <<{{ additional_context.external_classes[assoc.member_end] }},{{assoc.member_end}}>> {{ cardinality }}{% else %}| <<section-{{ assoc.member_end_xmi_id }},{{ assoc.member_end }}>> {{ cardinality }}{% endif %}
| {{ assoc.definition | replace: '|', '\|' | html2adoc }}
{% endif %}
{% endfor %}
{% endcapture %}
{% assign associations_stripped = rendered_associations | strip_newlines | strip %}

{% if associations_stripped.size > 0 %}
.{{ klass.name }} ({{ klass.stereotype }})的关联
[cols="15a,20a,60a",options="header"]
|===
| 角色名称 | 目标类型和多重度 | 定义

{{ rendered_associations }}

|===
{% endif %}
{% endif %}

{% if klass.attributes.size > 0 %}
.{{ klass.name }} ({{klass.stereotype}})的属性
[cols="15a,20a,60a",options="header"]
|===
| 属性 | 值类型和多重度 | 定义

{% for attr in klass.attributes %}
{% capture cardinality %}&#91;{% case attr.cardinality.min %}{% when 'C' %}0{% when 'M' %}1{% else %}{{ attr.cardinality.min }}{% endcase %}..{{ attr.cardinality.max }}&#93;{% endcapture %}
| {{ attr.name }}
{% if additional_context.external_classes[attr.type] %}| <<{{ additional_context.external_classes[attr.type] }},{{ attr.type }}>> {{ cardinality }}{% else %}| <<section-{{ attr.xmi_id }},{{ attr.type }}>> {{ cardinality }}{% endif %}
| {{ attr.definition | replace: '|', '\|' | html2adoc }}

{% endfor %}
|===

[NOTE,keep-separate=true]
====
除非另有说明，否则所有属性和角色名称都具有构造型
«Property».
====
{% endif %}
